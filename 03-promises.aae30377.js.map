{"version":3,"sources":["js/03-promises.js"],"names":["delayEl","document","querySelector","stepEl","amountEl","btnStart","firstDelay","stepValue","amountValue","timer","createPromise","position","delay","Promise","resolve","reject","Math","random","addEventListener","value","e","preventDefault","j","timer1","Number","i","doMyTimeOut","setTimeout","then","console","log","catch"],"mappings":";AAAA,MAAMA,EAAUC,SAASC,cAAc,UACjCC,EAASF,SAASC,cAAc,SAChCE,EAAWH,SAASC,cAAc,WAClCG,EAAWJ,SAASC,cAAc,SAExC,IAAII,EAAa,EACbC,EAAY,EACZC,EAAc,EACdC,EAAQ,EAuDZ,SAASC,EAAcC,EAAUC,GACxB,OAAA,IAAIC,QAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAGpCH,EAAQ,CAAEH,SAAAA,EAAUC,MAAAA,IAEpBG,EAAO,CAAEJ,SAAAA,EAAUC,MAAAA,MA5DzBZ,EAAQkB,iBAAiB,QAAS,KAChCZ,EAAaN,EAAQmB,QAKvBhB,EAAOe,iBAAiB,QAAS,KAC/BX,EAAYJ,EAAOgB,QAErBf,EAASc,iBAAiB,QAAS,KACjCV,EAAcJ,EAASe,QAIzBd,EAASa,iBAAiB,SAAWE,IACnCA,EAAEC,iBAEKC,IAAAA,EAAI,EACJC,EAASC,OAAOlB,GAClB,IAAA,IAAImB,EAAI,EAAGA,EAAIjB,EAAaiB,IAEjB,IAAVhB,IACFA,EAAQe,OAAOlB,GACfoB,KACAjB,GAASe,OAAOjB,GAClBmB,IAEOA,SAAAA,IAGWC,WAAW,KAE5BjB,EAAcY,EAAGC,GACbK,KAAK,EAAGjB,SAAAA,EAAUC,MAAAA,MAElBiB,QAAQC,2BAA2BnB,QAAeC,SAElDmB,MAAM,EAAGpB,SAAAA,EAAUC,MAAAA,MAElBiB,QAAQC,0BAA0BnB,QAAeC,SAIrDW,GAAUC,OAAOjB,GAChBe,GAAK,GAINb,GAEJA,EAAQ","file":"03-promises.aae30377.js","sourceRoot":"../src","sourcesContent":["const delayEl = document.querySelector('.delay');\nconst stepEl = document.querySelector('.step');\nconst amountEl = document.querySelector('.amount');\nconst btnStart = document.querySelector('.form');\n\nlet firstDelay = 0;\nlet stepValue = 0;\nlet amountValue = 0;\nlet timer = 0;\n\ndelayEl.addEventListener('input', () => {\n  firstDelay = delayEl.value; \n  \n \n   \n});\nstepEl.addEventListener('input', () => {\n  stepValue = stepEl.value;\n});\namountEl.addEventListener('input', () => {\n  amountValue = amountEl.value;\n});\n\n\nbtnStart.addEventListener('submit', (e) => {\n  e.preventDefault();\n  \n     let j = 1;\n     let timer1 = Number(firstDelay);\n  for (let i = 1; i < amountValue; i++) {\n   \n    if (timer === 0) { \n      timer = Number(firstDelay);\n      doMyTimeOut();\n    } timer += Number(stepValue);   \n    doMyTimeOut();   \n}\n  function doMyTimeOut() {\n    \n    \n     const timerId =  setTimeout(() => {\n      \n     createPromise(j, timer1)\n        .then(({ position, delay }) => {\n            \n         console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          \n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n          \n        })\n      \n      timer1 += Number(stepValue);\n       j += 1;\n         \n      \n      \n    },timer);\n  }\n  timer = 0;\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n  \n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  })\n}\n\n\n\n"]}